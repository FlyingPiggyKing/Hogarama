podTemplate(label: 'mypod', cloud: 'openshift', containers: [
    containerTemplate(name: 'hogajama-maven-build', image: 'gdhet/hogarama-jenkins-slave-maven-rhel7-docker:3.5.0-jdk-8u144b01', ttyEnabled: true, command: 'cat',
                      workingDir: '/home/jenkins',
                      alwaysPullImage: true,
                      resourceRequestCpu: '1000m',
                      resourceLimitCpu: '2000m',
                      resourceRequestMemory: '512Mi',
                      resourceLimitMemory: '1024Mi',
                      slaveConnectTimeout: 180,
                      volumes: [persistentVolumeClaim(mountPath: '/.m2/repository', claimName: 'maven-repo', readOnly: false)]),
    containerTemplate(name: 'mqtt-client-maven-build', image: 'gdhet/hogarama-jenkins-slave-maven-rhel7-docker:3.5.0-jdk-8u144b01', ttyEnabled: true, command: 'cat',
                      workingDir: '/home/jenkins',
                      alwaysPullImage: true,
                      resourceRequestCpu: '1000m',
                      resourceLimitCpu: '2000m',
                      resourceRequestMemory: '512Mi',
                      resourceLimitMemory: '1024Mi',
                      slaveConnectTimeout: 180,
                      volumes: [persistentVolumeClaim(mountPath: '/.m2/repository', claimName: 'maven-repo', readOnly: false)])
  ]) {

    node('mypod') {
        stage('Build') {
            parallel(
              'hogajama-maven-build': {
                git url: 'https://github.com/Gepardec/Hogarama.git', branch: "master"
                container('mqtt-client-maven-build') {
                  sh "mvn -s Hogajama/build/settings.xml clean install -f Hogajama/pom.xml"
                }
              },
              'mqtt-client-maven-build': {
                  git url: 'https://github.com/Gepardec/Hogarama.git', branch: "master"
                  container('mqtt-client-maven-build') {
                    sh "mvn -s mqtt-client-java/build/settings.xml clean install -f mqtt-client-java/mqtt-client/pom.xml"
                  }
                }
              )
          }
      }
}
